<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Meng Fanze</title>
    <description>求知，思考，高效生活</description>
    <link>http://iFanze.cn//</link>
    <atom:link href="http://iFanze.cn//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 23 May 2016 00:39:49 +0800</pubDate>
    <lastBuildDate>Mon, 23 May 2016 00:39:49 +0800</lastBuildDate>
    <generator>Jekyll v3.0.2</generator>
    
      <item>
        <title>【慕课网笔记】数据库设计那些事</title>
        <description>&lt;p&gt;注：这是看了慕课网上一个视频的笔记。是比较基础的数据库相关的知识，比如范式，并且还对数据库设计时需要注意的问题和一些经验性的内容做了分享。原视频链接：&lt;a href=&quot;http://www.imooc.com/learn/117&quot;&gt;http://www.imooc.com/learn/117&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;为什么要进行数据库设计&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;减少数据冗余&lt;/li&gt;
  &lt;li&gt;避免数据维护异常&lt;/li&gt;
  &lt;li&gt;节约存储空间&lt;/li&gt;
  &lt;li&gt;高效访问&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;数据库设计步骤&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;需求分析：数据是什么、有哪些属性、数据和属性有哪些特点&lt;/li&gt;
  &lt;li&gt;逻辑设计：用ER图逻辑建模&lt;/li&gt;
  &lt;li&gt;物理设计：根据数据库自身的特点&lt;/li&gt;
  &lt;li&gt;维护优化：新的需求进行建表、索引优化、大表拆分&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;需求分析&lt;/h2&gt;

&lt;h3 id=&quot;section-3&quot;&gt;作用&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;了解系统中所要存储的数据&lt;/li&gt;
  &lt;li&gt;了解数据的存储特点（时效性：过期清理；日志：不适合放在数据库中，或者注意定制清理规则。分库分表？归档？）&lt;/li&gt;
  &lt;li&gt;了解数据的生命周期&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-4&quot;&gt;搞清楚一些问题&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;实体及实体间的关系（1对1，1对多，多对多）&lt;/li&gt;
  &lt;li&gt;实体的属性有什么？&lt;/li&gt;
  &lt;li&gt;唯一标识实体的属性或属性组合？&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-5&quot;&gt;举例：电商网站&lt;/h3&gt;

&lt;p&gt;用户模块、商品模块、订单模块、购物车模块、供应商模块&lt;/p&gt;

&lt;h4 id=&quot;section-6&quot;&gt;用户模块&lt;/h4&gt;

&lt;p&gt;用户名、密码、电话、邮箱、身份证号、地址、姓名、昵称……&lt;/p&gt;

&lt;p&gt;存储特点：组件增加，要永久存储&lt;/p&gt;

&lt;h4 id=&quot;section-7&quot;&gt;商品模块&lt;/h4&gt;

&lt;p&gt;商品编码、商品名称、描述、品类、供应商名称、重量、有效期、价格……&lt;/p&gt;

&lt;p&gt;存储特点：对于下线商品可以归档存储&lt;/p&gt;

&lt;h4 id=&quot;section-8&quot;&gt;订单模块&lt;/h4&gt;

&lt;p&gt;订单号、用户姓名、电话、收货地址、商品编号、商品名称、数量、价格、订单状态、订单类型……&lt;/p&gt;

&lt;p&gt;存储特点：永久存储（分表、分库存储）&lt;/p&gt;

&lt;h4 id=&quot;section-9&quot;&gt;购物车模块&lt;/h4&gt;

&lt;p&gt;存储特点：不用永久存储（设置归档、清理规则）&lt;/p&gt;

&lt;h4 id=&quot;section-10&quot;&gt;供应商模块&lt;/h4&gt;

&lt;p&gt;存储特点：永久存储&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/14639346317272.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-11&quot;&gt;逻辑设计&lt;/h2&gt;

&lt;h3 id=&quot;section-12&quot;&gt;简介&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;将需求转化为数据库的逻辑模型&lt;/li&gt;
  &lt;li&gt;用ER图进行展示&lt;/li&gt;
  &lt;li&gt;与所选用的具体DBMS无关&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-13&quot;&gt;名词&lt;/h3&gt;

&lt;p&gt;关系、元组、属性、候选码、主码、域、分量&lt;/p&gt;

&lt;h3 id=&quot;er&quot;&gt;ER图例&lt;/h3&gt;

&lt;p&gt;实体、联系、属性、连接线&lt;/p&gt;

&lt;h3 id=&quot;nf&quot;&gt;设计范式（NF）&lt;/h3&gt;

&lt;p&gt;第一范式、第二范式、第三范式及BC范式，另还有第四、第五范式。&lt;/p&gt;

&lt;h4 id=&quot;section-14&quot;&gt;操作异常&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;插入异常&lt;/li&gt;
  &lt;li&gt;更新异常&lt;/li&gt;
  &lt;li&gt;删除异常&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-15&quot;&gt;数据冗余&lt;/h4&gt;

&lt;p&gt;相同的数据在多个地方存在，或者某个列由其它列计算得到。&lt;/p&gt;

&lt;h4 id=&quot;section-16&quot;&gt;第一范式&lt;/h4&gt;

&lt;p&gt;定义：数据库表中的所有字段都是单一属性，不可再分的。即表都是二维表。&lt;/p&gt;

&lt;p&gt;单一属性是由基本的数据类型所构成。&lt;/p&gt;

&lt;h4 id=&quot;section-17&quot;&gt;第二范式&lt;/h4&gt;

&lt;p&gt;定义：数据库表中不存在非关键字段对任一候选关键字段的部分函数依赖。&lt;/p&gt;

&lt;p&gt;部分函数依赖：存在组合关键字中的某一关键字决定非关键字的情况。&lt;/p&gt;

&lt;p&gt;所有单关键字段的表都符合第二范式。&lt;/p&gt;

&lt;p&gt;不符合第二范式的例子：
&lt;img src=&quot;/images/posts/14639346577960.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因为存在部分函数依赖：
(商品名称) -&amp;gt; (价格，描述，重量，有效期)
(供应商名称) -&amp;gt; (供应商电话)&lt;/p&gt;

&lt;p&gt;存在的问题：插入异常、删除异常、更新异常、数据冗余。&lt;/p&gt;

&lt;p&gt;解决方式：
&lt;img src=&quot;/images/posts/14639346749155.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-18&quot;&gt;第三范式&lt;/h4&gt;

&lt;p&gt;定义：如果数据表中不存在非关键字段，对任意候选关键字段的传递函数依赖，则符合第三范式。&lt;/p&gt;

&lt;p&gt;实例：
&lt;img src=&quot;/images/posts/14639346844892.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(商品名称) -&amp;gt; (分类) -&amp;gt; (分类描述)&lt;/p&gt;

&lt;p&gt;存在问题：数据冗余、插入异常、更新异常、删除异常。&lt;/p&gt;

&lt;p&gt;解决：
&lt;img src=&quot;/images/posts/14639346929465.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;bc&quot;&gt;BC范式&lt;/h4&gt;

&lt;p&gt;定义：Boyce.Codd范式，数据库表中如果不存在任何字段对任一候选关键字段的传递函数依赖则符合BCNF。&lt;/p&gt;

&lt;p&gt;实例：
&lt;img src=&quot;/images/posts/14639347213896.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;假定：供应商:供应商联系人 = 1:多，供应商:商品 = 1:多&lt;/p&gt;

&lt;p&gt;(供应商，商品ID) -&amp;gt; (联系人，商品数量)
(联系人，商品ID) -&amp;gt;（供应商，商品数量）&lt;/p&gt;

&lt;p&gt;存在：&lt;/p&gt;

&lt;p&gt;(供应商) -&amp;gt; (供应商联系人)
(供应商联系人) -&amp;gt; (供应商)&lt;/p&gt;

&lt;p&gt;所以不符合BCNF。&lt;/p&gt;

&lt;p&gt;解决：
&lt;img src=&quot;/images/posts/14639347354230.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;此处存疑，知乎上的讨论更好一些：&lt;a href=&quot;https://www.zhihu.com/question/24696366&quot;&gt;https://www.zhihu.com/question/24696366&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-19&quot;&gt;物理设计&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;选择合适的DBMS&lt;/li&gt;
  &lt;li&gt;定义数据库、表、字段的命名规范&lt;/li&gt;
  &lt;li&gt;选择合适的字段类型&lt;/li&gt;
  &lt;li&gt;反范式化设计（用空间换取时间）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dbms&quot;&gt;常见DBMS系统&lt;/h3&gt;

&lt;p&gt;商业数据库：Oracle、SQLServer（企业级项目）
开源数据库：MySQL、PgSQL（互联网项目）&lt;/p&gt;

&lt;p&gt;对事务操作要求较高：Oracle&lt;/p&gt;

&lt;h3 id=&quot;mysql&quot;&gt;MySQL常用数据引擎&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/14639347733735.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-20&quot;&gt;表和字段命名规则&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;可读性原则&lt;/li&gt;
  &lt;li&gt;表意性原则&lt;/li&gt;
  &lt;li&gt;长名原则&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-21&quot;&gt;字段类型选择原则&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;数字类型 &amp;gt; 日期/二进制 &amp;gt; 字符类型（优先空间小的类型）&lt;/li&gt;
  &lt;li&gt;如：birthday: Int &amp;gt; Datetime &amp;gt; Char(10) &amp;gt; varchar(20)&lt;/li&gt;
  &lt;li&gt;MySQL的TIMESTAMP只能存到2037年&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/14639347821112.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从两个角度考虑：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;进行数据比较操作时（查询、Join、排序等）：字符处理比数字慢&lt;/li&gt;
  &lt;li&gt;数据处理以页为单位，列长度越小，利于性能提升&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;char与varchar：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;若列中存储的数据长度差不多是一致的，用char&lt;/li&gt;
  &lt;li&gt;最大数据长度小于50字节，也考虑用char&lt;/li&gt;
  &lt;li&gt;不宜定义大于50字节的char类型&lt;/li&gt;
  &lt;li&gt;注意UTF8每个汉字占3个字节&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;decimal与float：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;decimal存储精确数据&lt;/li&gt;
  &lt;li&gt;float存储空间开销更小&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;时间类型如何存储&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用int：长度比datetime小，使用不方便，要转换，只能存到2038-1-19 11:14:07&lt;/li&gt;
  &lt;li&gt;根据需要存储的时间粒度选择&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-22&quot;&gt;其它&lt;/h3&gt;

&lt;h4 id=&quot;section-23&quot;&gt;如何选择主键&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;区分业务主键和数据库主键，前者用于标识，后者是为了优化数据存储&lt;/li&gt;
  &lt;li&gt;考虑是否要顺序增长&lt;/li&gt;
  &lt;li&gt;主键所占空间要尽可能小（使用聚集索引的表，每个索引后会附加主键信息）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-24&quot;&gt;避免使用外键约束&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;降低数据导入效率&lt;/li&gt;
  &lt;li&gt;增加维护成本&lt;/li&gt;
  &lt;li&gt;虽不建议，但相关联的列上一定要建立索引&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-25&quot;&gt;避免使用触发器&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;降低数据导入的效率&lt;/li&gt;
  &lt;li&gt;可能会出现意想不到的数据异常&lt;/li&gt;
  &lt;li&gt;使业务逻辑变复杂&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-26&quot;&gt;预留字段&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;无法准确知道预留字段的类型&lt;/li&gt;
  &lt;li&gt;无法准确知道预留字段的内容&lt;/li&gt;
  &lt;li&gt;后期维护预留字段的成本同增加一个字段的成本相同&lt;/li&gt;
  &lt;li&gt;严禁使用预留字段！&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-27&quot;&gt;反范式化表设计&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;用空间换时间&lt;/li&gt;
  &lt;li&gt;对第三范式进行违反&lt;/li&gt;
  &lt;li&gt;一定要适度&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-28&quot;&gt;维护和优化&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;维护数据字典&lt;/li&gt;
  &lt;li&gt;维护索引&lt;/li&gt;
  &lt;li&gt;维护表结构&lt;/li&gt;
  &lt;li&gt;在适当的时候对表进行水平拆分或垂直拆分&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-29&quot;&gt;维护数据字典&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;使用第三方工具&lt;/li&gt;
  &lt;li&gt;使用备注字段，可以用select语句导出&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-30&quot;&gt;维护索引&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;出现在Where、group by、order by从句中的列&lt;/li&gt;
  &lt;li&gt;可选择性高的列要放到索引的前面&lt;/li&gt;
  &lt;li&gt;索引中不要包括太长的数据类型&lt;/li&gt;
  &lt;li&gt;并不是越多越好，过多的索引对读写都不好&lt;/li&gt;
  &lt;li&gt;定期维护索引碎片&lt;/li&gt;
  &lt;li&gt;在SQL语句中不要使用强制索引关键字&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-31&quot;&gt;维护表结构&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;使用在线变更表结构的工具&lt;/li&gt;
  &lt;li&gt;同时对数据字典进行维护&lt;/li&gt;
  &lt;li&gt;控制表的宽度和大小&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-32&quot;&gt;数据库中适合的操作&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;批量操作比逐条操作好&lt;/li&gt;
  &lt;li&gt;禁止使用select *&lt;/li&gt;
  &lt;li&gt;控制使用自定义函数&lt;/li&gt;
  &lt;li&gt;不要使用全文索引&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-33&quot;&gt;表的拆分&lt;/h3&gt;

&lt;h4 id=&quot;section-34&quot;&gt;垂直拆分：&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;经常一起查询的列放一起&lt;/li&gt;
  &lt;li&gt;text,blob等大字段拆分到附加表中&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-35&quot;&gt;水平拆分：&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;为了控制表的大小。&lt;/li&gt;
  &lt;li&gt;常用方式：主键Hash&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 22 May 2016 23:05:40 +0800</pubDate>
        <link>http://iFanze.cn//2016/05/%E6%85%95%E8%AF%BE%E7%BD%91%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
        <guid isPermaLink="true">http://iFanze.cn//2016/05/%E6%85%95%E8%AF%BE%E7%BD%91%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
        
        <category>数据库</category>
        
        
      </item>
    
      <item>
        <title>【慕课网笔记】Java高并发秒杀API（二）：Service层</title>
        <description>&lt;p&gt;注：续前文。&lt;/p&gt;

&lt;p&gt;DAO层不写逻辑代码，主要内容：接口设计 + SQL编写。代码和SQL分离，方便Review。&lt;/p&gt;

&lt;p&gt;DAO拼接等逻辑在Service层完成。&lt;/p&gt;

&lt;h2 id=&quot;service&quot;&gt;Service接口设计&lt;/h2&gt;

&lt;h3 id=&quot;section&quot;&gt;目录：&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;main
--resources
    --mapper
        SeckillDao.xml
        SuccessKilledDao.xml
    --spring
        spring-dao.xml
        spring-service.xml
    mybatis-config.xml
--webapp
--java
    --org.seckill
        --dao
        --entity
        --service
            --impl
                SeckillServiceImpl
            SeckillService
        --exception
        --dto           数据传输层
        --enums
            SeckillStateEnum
--sql

test
--java
--resources
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;设计业务接口：要站在“使用者”角度设计接口，而不是实现。包括三个方面：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;方法定义粒度&lt;/li&gt;
  &lt;li&gt;参数&lt;/li&gt;
  &lt;li&gt;返回类型（return 类型/异常）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-1&quot;&gt;编码：&lt;/h3&gt;

&lt;p&gt;DTO：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exposer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exposed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//是否开启秒杀&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seckillId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SeckillExecution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seckillId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stateInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SuccessKilled&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;successKilled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Exception:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 重复秒杀异常（运行期异常）&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RepeatKillException&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SeckillException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 秒杀关闭异常&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SeckillCloseException&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SeckillException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 秒杀相关业务异常（通用异常）&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SeckillException&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//IDE自动生成&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Service:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SeckilService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Seckill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSeckillList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Seckill&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seckillId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Exposer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exportSeckillUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seckillId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SeckillExecution&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executeSeckill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seckillId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userPhone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SeckillException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RepeatKillException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SeckillCloseException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;实现Service：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SeckillServiceImpl&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SeckillService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SeckillDao&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seckillDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SuccessKilledDao&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;successKilledDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rgafghasdjfas;dfjads;fj&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//盐值，混淆MD5。&lt;/span&gt;
    
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Seckill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSeckillList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
    
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;Seckill&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seckillId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;Exposer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exportSeckillUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seckillId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//拿到Seckill对象&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//比较nowTime是否在startTime和endTime之间。返回相应的 new Exposer()。&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// 多看看这个函数的实现，很有用！！(放在本文的最后了。)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SeckillExecution&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executeSeckill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seckillId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userPhone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SeckillException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RepeatKillException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SeckillCloseException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//判断md5是否存在和是否被篡改&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//执行秒杀逻辑：减库存、记录购买行为。抛出异常或者返回new SeckillExecution()。注意这里的try...catch和throw异常的使用。&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以把状态（数据字典）封装成枚举：SeckillStatEnum，尽量遵循枚举的开发规范。&lt;/p&gt;

&lt;h2 id=&quot;springservice&quot;&gt;使用Spring托管Service依赖理论&lt;/h2&gt;

&lt;p&gt;Spring IOC：依赖注入。对对象工厂和依赖管理可以获得一致的访问接口。&lt;/p&gt;

&lt;p&gt;业务对象依赖图：
&lt;img src=&quot;/images/posts/14638488325375.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为什么用IOC：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;对象创建统一管理&lt;/li&gt;
  &lt;li&gt;规范的生命周期管理&lt;/li&gt;
  &lt;li&gt;灵活的依赖注入&lt;/li&gt;
  &lt;li&gt;一致的获取对象&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Spring IOC注入方式和场景：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;XML：来自第三方类库，需要命名空间配置&lt;/li&gt;
  &lt;li&gt;注解：项目中自身开发使用的类，如@Service、@Controller&lt;/li&gt;
  &lt;li&gt;Java配置类：通过代码控制对象创建逻辑，如自定义修改依赖类库&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本项目IOC使用：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;XML配置&lt;/li&gt;
  &lt;li&gt;package-scan（包扫描）&lt;/li&gt;
  &lt;li&gt;Annotation注解&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;编码&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;创建spring-service.xml：扫描service包下所有使用注解的类型&lt;/li&gt;
  &lt;li&gt;对SeckillServiceImpl使用@Service注解，注入Service依赖（对成员变量使用@Autowired）。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;扩展：@Component、@Service、@Dao、@Controller。@Autowired、@Resource、@Inject。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;spring&quot;&gt;使用Spring声明式事务理论&lt;/h3&gt;

&lt;p&gt;声明式事务：解脱事务代码，交给第三方框架。&lt;/p&gt;

&lt;p&gt;使用方式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;早期：ProxyFactoryBean + XML。&lt;/li&gt;
  &lt;li&gt;tx:advice + aop命名空间：一次配置永久生效。（使用较多）&lt;/li&gt;
  &lt;li&gt;注解@Transactional：注解控制。（更推荐）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用注解控制事务方法的优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;开发团队达成一致约定，明确标注事务方法的编程风格&lt;/li&gt;
  &lt;li&gt;保证事务方法的执行时间尽可能短，不要穿插其它网络操作（RPC/HTTP请求）或者剥离到事务方法外部。&lt;/li&gt;
  &lt;li&gt;不是所有的方法都需要事务，如只有一条修改操作，只读操作不需要事务控制。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;事务方法嵌套：声明式事务独有的概念，当有新的事务到来时：propagation_required等。&lt;/p&gt;

&lt;p&gt;什么时候回滚事务：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;抛出运行期异常（RuntimeException）&lt;/li&gt;
  &lt;li&gt;要小心不当的try-catch。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具体配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;配置事务管理器（jdbc）：注入数据库连接池&lt;/li&gt;
  &lt;li&gt;配置基于注解的声明式事务，默认使用注解来管理事务行为&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;service-1&quot;&gt;使用集成测试Service逻辑&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;使用Logback记录日志。&lt;/li&gt;
  &lt;li&gt;注意异常情况的处理。&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 21 May 2016 23:05:40 +0800</pubDate>
        <link>http://iFanze.cn//2016/05/%E6%85%95%E8%AF%BE%E7%BD%91%E7%AC%94%E8%AE%B0-Java%E9%AB%98%E5%B9%B6%E5%8F%91%E7%A7%92%E6%9D%80API-%E4%BA%8C-Service%E5%B1%82/</link>
        <guid isPermaLink="true">http://iFanze.cn//2016/05/%E6%85%95%E8%AF%BE%E7%BD%91%E7%AC%94%E8%AE%B0-Java%E9%AB%98%E5%B9%B6%E5%8F%91%E7%A7%92%E6%9D%80API-%E4%BA%8C-Service%E5%B1%82/</guid>
        
        <category>Java</category>
        
        
      </item>
    
      <item>
        <title>【慕课网笔记】Java高并发秒杀API（一）：业务分析与DAO层</title>
        <description>&lt;p&gt;注：这是我在看完慕课网上的视频后记的笔记，从零开始介绍了如何开发一个高并发的商品秒杀网站。&lt;/p&gt;

&lt;p&gt;我觉得这是我在慕课网上看得最有价值的视频之一了，从中可以学习到很多项目构建的思路和编码技巧。唯一遗憾的是，这是用Java写的，而我没有用Java写过网站，所以对其中的很多Java依赖库丝毫不了解。不过没有关系，语言只是工具，思想都是相通的。把它放在PHP或者ASP.Net上一定会有类似的框架和方案可以实现同样的功能。也正因如此，若直接看我的这篇博客，可能什么都学不到。这篇博客是为我日后回顾做记录的。想学习相关的内容还是从看慕课网上yijun zhang老师的视频开始吧。&lt;/p&gt;

&lt;p&gt;传送门：&lt;a href=&quot;http://www.imooc.com/u/2145618/courses?sort=publish&quot;&gt;http://www.imooc.com/u/2145618/courses?sort=publish&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;课程介绍&lt;/h2&gt;

&lt;p&gt;基于SpringMVC + Spring + MyBatis。&lt;/p&gt;

&lt;p&gt;秒杀业务：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;具有典型“事务”特性&lt;/li&gt;
  &lt;li&gt;秒杀/红包类应用越来越多&lt;/li&gt;
  &lt;li&gt;面试常问&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;相关技术介绍&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;MySQL：表设计、SQL技巧、事务和行级锁&lt;/li&gt;
  &lt;li&gt;MyBatis：DAO层设计与开发、合理使用MyBatis、与Spring的整合&lt;/li&gt;
  &lt;li&gt;Spring：Spring IOC整合Service、声明式事务运用&lt;/li&gt;
  &lt;li&gt;SpringMVC：Restful接口设计和使用、框架运作流程、Controller开发技巧&lt;/li&gt;
  &lt;li&gt;前端：交互设计、Bootstrap、JQuery&lt;/li&gt;
  &lt;li&gt;高并发：高并发点和分析、优化思路和实现。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;创建项目&lt;/h2&gt;

&lt;p&gt;从零开始创建、从官网获取资源、使用Maven创建项目然后导入到IntelliJ IDEA工程。&lt;/p&gt;

&lt;p&gt;注意使用更高的Servlet版本。&lt;/p&gt;

&lt;p&gt;目录：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;main
--resources
    --mapper
        SeckillDao.xml
        SuccessKilledDao.xml
    --spring
        spring-dao.xml
    mybatis-config.xml
--webapp
--java
    --org.seckill
        --dao
        --entity
--sql

test
--java
--resources
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-3&quot;&gt;配置依赖：&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;junit 4.11&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;日志：java常用：slf4j，log4j，logback，common-logging。
    &lt;ul&gt;
      &lt;li&gt;slf4j(接口) + logback(实现)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;数据库相关：
    &lt;ul&gt;
      &lt;li&gt;驱动：mysql-connector-java&lt;/li&gt;
      &lt;li&gt;连接池：c3p0&lt;/li&gt;
      &lt;li&gt;DAO框架：MyBatis&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Servlet Web相关依赖
    &lt;ul&gt;
      &lt;li&gt;标签：taglibs&lt;/li&gt;
      &lt;li&gt;默认标签库：jstl&lt;/li&gt;
      &lt;li&gt;jackson&lt;/li&gt;
      &lt;li&gt;javax.servlet-api&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;spring依赖：
    &lt;ul&gt;
      &lt;li&gt;核心依赖：spring-core&lt;/li&gt;
      &lt;li&gt;IOC：spring-beans&lt;/li&gt;
      &lt;li&gt;扩展：spring-context&lt;/li&gt;
      &lt;li&gt;DAO层依赖：spring-jdbc&lt;/li&gt;
      &lt;li&gt;事务相关：spring-tx&lt;/li&gt;
      &lt;li&gt;Spring Web相关依赖：spring-web&lt;/li&gt;
      &lt;li&gt;spring-webmvc&lt;/li&gt;
      &lt;li&gt;spring test相关依赖：spring-test&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-4&quot;&gt;秒杀业务的分析&lt;/h2&gt;

&lt;p&gt;核心：用户和商家对库存的处理。&lt;/p&gt;

&lt;p&gt;用户：减库存、记录购买明细 =&amp;gt; 事务 =&amp;gt; 数据落地（MySQL Vs NoSQL）&lt;/p&gt;

&lt;p&gt;事务机制依然是目前最可靠的数据落地方案。&lt;/p&gt;

&lt;p&gt;难点：“竞争”。MySQL：事务 + 行级锁。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;实现哪些秒杀功能&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;秒杀接口暴露&lt;/li&gt;
  &lt;li&gt;执行秒杀&lt;/li&gt;
  &lt;li&gt;相关查询&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;开发阶段：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DAO设计编码&lt;/li&gt;
  &lt;li&gt;Service设计编码&lt;/li&gt;
  &lt;li&gt;Web设计编码&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-6&quot;&gt;编码&lt;/h2&gt;

&lt;h3 id=&quot;section-7&quot;&gt;数据库设计与编码&lt;/h3&gt;

&lt;h4 id=&quot;ddl&quot;&gt;DDL&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;秒杀库存表：&lt;code class=&quot;highlighter-rouge&quot;&gt;seckill(seckill_id, name, number, start_time, end_time, create_time)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MySQL使用InnoDB引擎（支持事务）。
在start_time、end_time、create_time上建立索引。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;秒杀成功明细表：&lt;code class=&quot;highlighter-rouge&quot;&gt;success_killed(seckill_id, user_phone, state, create_time)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用联合主键：seckill_id, user_phone
在create_time上建立索引。
state: -1无效，0成功，1已付款….&lt;/p&gt;

&lt;p&gt;养成手写DDL的习惯。&lt;/p&gt;

&lt;h4 id=&quot;dao&quot;&gt;DAO实体和接口编码&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;编写Entity类。（技巧：IDE生成getter/setter/tostring）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;设计DAO接口：实体的CRUD。
    &lt;ul&gt;
      &lt;li&gt;SeckillDao：
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;int reduceNumber(long seckillId, Data killTime)&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Seckill queryById(long seckillId)&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;List&amp;lt;Seckill&amp;gt; queryAll(int offset, int limit)&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;SuccessKilledDao:
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;int insertSuccessKilled(SuccessKilled successKilled)&lt;/code&gt;（没必要传整个实体，long seckillId, long userPhone即可）&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SuccessKilled queryByIdWithSeckill(long seckillId)&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基于myBatis（或HiberNate）实现DAO。写mapper，为DAO接口方法提供SQL语句配置。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;myBatis整合Spring：
    &lt;ul&gt;
      &lt;li&gt;更少的编码：只写接口，不写实现&lt;/li&gt;
      &lt;li&gt;更少的配置：别名（省去包名）、配置扫描、DAO实现&lt;/li&gt;
      &lt;li&gt;足够的灵活性。（自己定制SQL、自由传参、结果集自动复制）&lt;/li&gt;
    &lt;/ul&gt;

    &lt;ol&gt;
      &lt;li&gt;配置数据库相关参数。&lt;/li&gt;
      &lt;li&gt;数据库连接池c3p0。（连接池属性：数据库连接参数、maxPoolSize、minPoolSize、autoCommitOnClose、checkoutTimeout、acquireRetryAttempts）&lt;/li&gt;
      &lt;li&gt;配置sqlSessionFactory对象：注入数据库连接池、配置MyBatis全局配置文件、扫描entity包并使用别名、扫描sql配置文件(mapper/*.xml)。&lt;/li&gt;
      &lt;li&gt;配置扫描DAO接口包，动态实现DAO接口，注入到spring容器中：注入sqlSessionFactory、给出扫描DAO接口包。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;dao-1&quot;&gt;DAO层单元测试和问题排查&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;使用IDE自动生成SeckillDaoTest()方法。&lt;/li&gt;
  &lt;li&gt;配置spring和junit整合，junit启动时加载springIOC容器。告诉junit spring配置文件。&lt;/li&gt;
  &lt;li&gt;注入DAO实现类依赖。（就是声明个成员变量…）&lt;/li&gt;
  &lt;li&gt;编写测试方法。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;涨姿势：Java没有保存形参的记录，要对形参使用@params注解。&lt;/p&gt;

</description>
        <pubDate>Sat, 21 May 2016 22:05:40 +0800</pubDate>
        <link>http://iFanze.cn//2016/05/%E6%85%95%E8%AF%BE%E7%BD%91%E7%AC%94%E8%AE%B0-Java%E9%AB%98%E5%B9%B6%E5%8F%91%E7%A7%92%E6%9D%80API-%E4%B8%80-%E4%B8%9A%E5%8A%A1%E5%88%86%E6%9E%90%E4%B8%8EDAO%E5%B1%82/</link>
        <guid isPermaLink="true">http://iFanze.cn//2016/05/%E6%85%95%E8%AF%BE%E7%BD%91%E7%AC%94%E8%AE%B0-Java%E9%AB%98%E5%B9%B6%E5%8F%91%E7%A7%92%E6%9D%80API-%E4%B8%80-%E4%B8%9A%E5%8A%A1%E5%88%86%E6%9E%90%E4%B8%8EDAO%E5%B1%82/</guid>
        
        <category>Java</category>
        
        
      </item>
    
      <item>
        <title>关于我</title>
        <description>&lt;p&gt;这里是孟凡泽的个人站点（&lt;a href=&quot;http://ifanze.cn&quot;&gt;http://ifanze.cn&lt;/a&gt;），在茫茫互联网的海洋中豪不起眼。如果您是碰巧空降至此，还真是一种缘分呢。&lt;/p&gt;

&lt;p&gt;本博客将记录我今后的学习历程，主要是Web相关的技术。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;经历&lt;/h2&gt;

&lt;p&gt;我出生在一个平凡的小县城，现就读于武汉大学这所美丽的大学。主修GIS，在大学期间做过很多Web开发相关的项目。经过在这里已经近五年的学习和生活，自己渐渐明确了将来在这条职业道路上的发展方向。&lt;/p&gt;

&lt;p&gt;自我感觉，大学里收获最多的是对编程基础的夯实。从C/C++作为入门，到数据结构、数据库、软件工程这些基本课程的学习，再到自己在W3school在线教程学习Web技术相关的基础知识，在慕课网上认识了MVC框架，再在导师所给的工程项目中将这些用于实践。这些经历过程中所收获的，包括基础理论、语言语法、工具使用、查阅文档的能力、代码调试能力、简单的架构和重构能力、团队沟通和合作能力，我想就是构筑将来自己的技能栈所需要的基石吧。&lt;/p&gt;

&lt;p&gt;现在，在这毕业找工作之际，我建立起这篇博客，期待在接下来的日子中，自己能够将琐碎的知识组织起来，并有所输出。我想是大有裨益的。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;爱好&lt;/h2&gt;

&lt;p&gt;我喜欢和计算机，手机，以及其它智能设备打交道。追求硬件、软件和互联网产品上更优质和更高效的使用体验。有时会宅在电脑前玩LOL，自诩不坑。也有时拿起相机出去拍拍片，审美不行的我水平特渣，努力提升ing。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;阅读&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;《算法导论》&lt;/li&gt;
  &lt;li&gt;《深入理解计算机系统》&lt;/li&gt;
  &lt;li&gt;《MacTalk·人生元编程》&lt;/li&gt;
  &lt;li&gt;《重构：改善既有代码的设计》&lt;/li&gt;
  &lt;li&gt;《Clean Code Handbook》&lt;/li&gt;
  &lt;li&gt;《程序员面试白皮书》&lt;/li&gt;
  &lt;li&gt;《高效能人士的七个习惯》&lt;/li&gt;
  &lt;li&gt;《快乐的Linux命令行》&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;受益于&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/&quot;&gt;廖雪峰的官方网站&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mifengtd.cn&quot;&gt;褪墨・时间管理，个人提升，生活健康与习惯&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pizida.com/&quot;&gt;痞子达・web学习、移动开发学习&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cnfeat.com/&quot;&gt;独立写生&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/&quot;&gt;阮一峰的网络日志&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://w3school.com.cn/&quot;&gt;w3shool 在线教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-4&quot;&gt;关注&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://ithome.com&quot;&gt;IT之家 - 数码，科技，生活&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://zhihu.com&quot;&gt;知乎&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://iplaysoft.com&quot;&gt;异次元软件世界 - 软件改变生活！&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://zealer.com&quot;&gt;ZEALER - 科技生活方式第一站&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.appinn.com/&quot;&gt;小众软件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http:/imooc.com&quot;&gt;慕课网 - 国内最大的IT技能学习平台&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bbs.feng.com&quot;&gt;威锋网论坛 - 千万果粉大本营&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bbs.pcbeta.com&quot;&gt;远景论坛 - 微软极客社区&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-5&quot;&gt;加我好友&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/qrcode_1463853322210%E5%89%AF%E6%9C%AC.jpg&quot; alt=&quot;qrcode_1463853322210副本&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 20 May 2016 22:05:40 +0800</pubDate>
        <link>http://iFanze.cn//about/</link>
        <guid isPermaLink="true">http://iFanze.cn//about/</guid>
        
        <category>日志</category>
        
        
      </item>
    
  </channel>
</rss>
